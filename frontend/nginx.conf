events {}

http {
    server {
        listen 80;
        server_name kapasasprotegiendovidas.com;
        return 301 https://$host$request_uri;
    }

    # HTTPS server replaces original one below

    include       mime.types;
    default_type  application/octet-stream;

    # Configuración del servidor para manejar solo tráfico interno
    server {
        listen 443 ssl http2;
        server_name kapasasprotegiendovidas.com;
        ssl_certificate /etc/letsencrypt/live/kapasasprotegiendovidas.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kapasasprotegiendovidas.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        server_name localhost;

        # Configuración del servidor
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "same-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests" always;
        add_header X-XSS-Protection "0" always;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        charset utf-8;

        location / {
            try_files $uri $uri/ /index.html;

            # Cabeceras CORS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                return 204;
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*' always;
            }

            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /robots.txt {
            access_log off;
            log_not_found off;
        }

        access_log off;
        error_log /var/log/nginx/error.log error;

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
